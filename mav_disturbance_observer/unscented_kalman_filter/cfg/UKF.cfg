#!/usr/bin/env python
PACKAGE = "unscented_kalman_filter"
 
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Q_position", double_t, 0, "Process noise covariance on position I_(x,y,z)", 0.001, 1e-10, 10)
gen.add("Q_velocity", double_t, 0, "Process noise covariance on velocity I_(xdot,ydot,dot)", 0.001, 1e-10, 5)
gen.add("Q_attitude", double_t, 0, "Process noise covariance on attitude B_(qx,qy,qx)", 0.001, 1e-10, 10)
gen.add("Q_angularvelocity", double_t, 0, "Process noise covariance on angular velocity B_(omegax,omegay,omegax)", 0.01, 1e-10, 5)

gen.add("Q_external_FxFy", double_t, 0, "Process noise covariance on external forces I_Fx and I_Fy", 0.1, 1e-7, 10)
gen.add("Q_external_Fz", double_t, 0, "Process noise covariance on external force I_Fz)", 0.1, 1e-7, 10)
gen.add("Q_external_Myaw", double_t, 0, "Process noise covariance on exteral moment around z axis in body reference frame)", 0.01, 1e-10, 10)

gen.add("R_position", double_t, 0, "Measurement noise covariance on position I_(x,y,z)", 0.0001, 1e-10, 10)
gen.add("R_velocity", double_t, 0, "Measurement noise covariance on velocity I_(xdot,ydot,dot)", 0.0001, 1e-10, 5)
gen.add("R_attitude", double_t, 0, "Measurement noise covariance on attitude B_(qx,qy,qx)", 0.01, 1e-10, 10)
gen.add("R_angularvelocity", double_t, 0, "Measurement noise covariance on angular velocity B_(omegax,omegay,omegax)", 0.01, 1e-10, 5)

gen.add("force_offset_computation_time", double_t, 0, "Time to compute force offset in [s]. Reccomended: 2 or 5", 2, 0.1, 10)
gen.add("alpha", double_t, 0, "tune the spread of the sigma points from the mean. Recommended: 1", 0.0001, 1e-10, 1)
gen.add("beta", double_t, 0, "tune second order moment for the approximation of the mean. Recommended: 0 or 2", 0, 0, 3)
gen.add("kappa", double_t, 0, "tune scaling parameter. Recommended: 0 or -15" , 0, -20, 20)
gen.add("MRP_a", double_t, 0, "allows to place the singularity in Modified Rodiguez Parameters used to compute the attitude error. Recommended: 1. For reference check 'Unscented Filtering For Spacecraft Attitude Estimation', J. Crassidis, F. Markley", 1, 0, 3)

gen.add("debug_mode", bool_t, 0, "If Active, outputs debug informaitons - Warnings are output anyway", False)

exit(gen.generate(PACKAGE, "Config", "UKF"))
