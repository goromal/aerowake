<launch>
<arg name="ir_lights"          default="true"/>
<arg name="camcal_param"       default="creare-camera-calib"/>
<arg name="camcfg_param_green" default="creare_config_GREENLIGHTS"/>
<arg name="camcfg_param_ir"    default="creare_config_INFRARED"/>
<arg name="vis_param"          default="mit-uav-sim"/>
<arg name="frame_param"   default="match-ff2-frame"/>

<arg if="$(arg ir_lights)" name="camcfg_param"      default="$(arg camcfg_param_ir)"/>
<arg unless="$(arg ir_lights)" name="camcfg_param"  default="$(arg camcfg_param_green)"/>

<arg name="camcal_paramfile"  default="$(find aerowake_params)/params/camera/$(arg camcal_param).yaml"/>
<arg name="camcfg_paramfile"  default="$(find aerowake_params)/params/camera/$(arg camcfg_param).yaml"/>
<arg name="vis_paramfile"     default="$(find aerowake_params)/params/vision/$(arg vis_param).yaml"/>
<arg name="frame_paramfile"   default="$(find aerowake_params)/params/frame/$(arg frame_param).yaml"/>

<rosparam command="load" file="$(arg camcfg_paramfile)"/>
<group ns="camera">
    <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />
    <node name="pointgrey_camera" pkg="pointgrey_camera_driver" type="camera_node" output="screen"
            args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager">
        <param name="camera_info_url" value="file://$(arg camcal_paramfile)"/>
   </node>
</group>

<node name="vision_system" pkg="vision" type="vision_system.py" output="screen">
    <param name="debug" value="0"/>
    <rosparam command="load" file="$(arg camcal_paramfile)"/>
    <rosparam command="load" file="$(arg vis_paramfile)"/>
    <rosparam command="load" file="$(arg frame_paramfile)"/>
  </node>

</launch>
